{"version":3,"sources":["Images/atomAnim.gif","Images/rick.gif","components/header.jsx","Contexts/atomicContexts.js","components/Tile.jsx","components/hiddenTile.jsx","components/TableHolder.jsx","components/dataBox.jsx","components/App.js","index.js"],"names":["Header","className","src","picAtom","rickRoll","atomicContext","createContext","Tile","props","setEle","useContext","onClick","number","style","backgroundColor","test","symbol","name","HiddenTile","ChemData","require","chemArray","actL1","actL2","atomicNum","addArray","x","numbers","addTile","data","atomicNumber","undefined","TableHolder","map","console","log","DataBox","getEle","atomicMass","bondingType","boilingPoint","meltingPoint","groupBlock","yearDiscovered","App","useState","Provider","value","ReactDOM","render","document","getElementById"],"mappings":"wJAAe,MAA0B,qCCA1B,MAA0B,iC,OCa1BA,MATf,WACI,OAAO,yBAAQC,UAAU,SAAlB,UAEC,qBAAKA,UAAU,OAAOC,IAAKC,IAE3B,qBAAKF,UAAU,WAAWC,IAAKE,QCP9BC,EAAgBC,wBAAc,ICyB5BC,MAvBf,SAAcC,GACV,IAAQC,EAAWC,qBAAWL,GAAtBI,OACR,OAAO,sBAAKR,UAAU,OAAQU,QAY9B,WAEIF,EAAOD,EAAMI,SAdV,UACH,qBAAKX,UAAU,YAAaY,MAAO,CAACC,gBAAgBN,EAAMO,MAA1D,SACI,4BAAIP,EAAMI,WAEd,qBAAKX,UAAU,eAAeY,MAAO,CAACC,gBAAgBN,EAAMO,MAA5D,SACI,mCAAMP,EAAMQ,YAEhB,qBAAKf,UAAU,aAAcY,MAAO,CAACC,gBAAgBN,EAAMO,MAA3D,SACI,6BAAKP,EAAMS,aCLRC,MANf,WACI,OAAO,qBAAKjB,UAAU,gBCApBkB,EAAWC,EAAQ,GAErBC,EAAY,GAEZC,EAAQ,IACRC,EAAQ,IACRC,EAAY,EAWhB,SAASC,IACL,IAAI,IAAIC,EAAI,EAAGA,EAAI,IAAKA,IAChBA,EAAI,GAAKA,EAAI,IAAQA,EAAE,IAAMA,EAAI,IAAQA,EAAE,IAAMA,EAAI,IAAQA,EAAI,KAAOA,EAAI,KAASA,EAAI,KAAOA,EAAI,IACpGL,EAAUK,EAAE,GAAK,GACZF,EAAY,IAAMA,EAAY,IACnB,IAAbA,IACCH,EAAUK,EAAE,GAAK,IAErBL,EAAUC,GAASH,EAASQ,QAAQH,GACpCF,IACAE,KAEIA,EAAY,IAAMA,EAAY,KAClB,IAAbA,IACCH,EAAUK,EAAE,GAAK,IAErBL,EAAUE,GAASJ,EAASQ,QAAQH,GACpCD,IACAC,KAEIA,EAAY,MAChBH,EAAUK,EAAE,GAAKP,EAASQ,QAAQH,GAClCA,KAKZ,SAASI,EAAQC,GAEb,IAAIH,EAOJ,OALIA,EADoB,GAArBG,EAAKC,aACA,MAGA,aAESC,GAAbF,EAAKZ,KACE,cAAC,EAAD,IAEA,cAAC,EAAD,CACPD,OAAUa,EAAKb,OACfJ,OAAUiB,EAAKC,aACfb,KAAQY,EAAKZ,KACbF,KAAQW,IAQDM,MA3Df,WAEI,OAAO,qBAAK/B,UAAU,SAAf,UACFwB,IAAYJ,EAAUY,IAAIL,OCX7BT,EAAWC,EAAQ,GACzBc,QAAQC,IAAIhB,GA4BGiB,MA1Bf,WACI,IAAQC,EAAW3B,qBAAWL,GAAtBgC,OAER,OAAO,sBAAKpC,UAAU,UAAf,UACH,2CACckB,EAASQ,QAAQU,GAAQpB,QAIvC,+BACG,+BACI,0CAAaE,EAASQ,QAAQU,GAAQrB,UACtC,iDAAoBG,EAASQ,QAAQU,GAAQP,gBAC7C,+CAAkBX,EAASQ,QAAQU,GAAQC,cAC3C,gDAAmBnB,EAASQ,QAAQU,GAAQE,eAC5C,iDAAoBpB,EAASQ,QAAQU,GAAQG,gBAC7C,iDAAoBrB,EAASQ,QAAQU,GAAQI,gBAC7C,+CAAkBtB,EAASQ,QAAQU,GAAQK,cAC3C,mDAAsBvB,EAASQ,QAAQU,GAAQM,qBAGnD,gCCTIC,MAbf,WACE,MAAyBC,mBAAS,GAAlC,mBAAOR,EAAP,KAAe5B,EAAf,KAEA,OAAO,gCAEH,cAAC,EAAD,IACF,eAACJ,EAAcyC,SAAf,CAAwBC,MAAS,CAACV,SAAO5B,UAAzC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,WCVNuC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b3f6ef65.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/atomAnim.d1ccf00a.gif\";","export default __webpack_public_path__ + \"static/media/rick.f42a0f6f.gif\";","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport picAtom from '../Images/atomAnim.gif';\r\nimport rickRoll from '../Images/rick.gif';\r\nfunction Header(){\r\n    return <header className='navbar'>\r\n        {/* <div className='inner'> */}\r\n            <img className=\"logo\" src={picAtom}/>\r\n        {/* </div> */}\r\n            <img className='rickRoll' src={rickRoll}/>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import { createContext } from \"react\" \r\n\r\nexport const atomicContext = createContext({})","import React,{useContext} from 'react';\r\nimport { atomicContext } from '../Contexts/atomicContexts';\r\n\r\n\r\nfunction Tile(props){ \r\n    const { setEle } = useContext(atomicContext);\r\n    return <div className='tile'  onClick={clicked} >\r\n        <div className='atomicNum'  style={{backgroundColor:props.test}}>\r\n            <p>{props.number}</p>\r\n        </div>\r\n        <div className='atomicSymbol' style={{backgroundColor:props.test}}>\r\n            <h1> {props.symbol}</h1>\r\n        </div>\r\n        <div className='atomicName'  style={{backgroundColor:props.test}}>\r\n            <h2>{props.name}</h2>\r\n        </div>\r\n    </div>\r\n    \r\n    function clicked(){\r\n        \r\n        setEle(props.number);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Tile;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nfunction HiddenTile(){\r\n    return <div className='hiddenTile'>\r\n        \r\n    </div>\r\n}\r\n\r\nexport default HiddenTile;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport Tile from './Tile';\r\nimport HiddenTile from './hiddenTile';\r\nconst ChemData = require('periodic-table');\r\n\r\nvar chemArray = [];\r\nvar actLan = [];\r\nvar actL1 = 176;\r\nvar actL2 = 198;\r\nvar atomicNum = 0;\r\n\r\n\r\nfunction TableHolder(){\r\n    \r\n    return <div className='PTable'>\r\n        {addArray(), chemArray.map(addTile)}\r\n    </div>\r\n}\r\n\r\n\r\nfunction addArray(){\r\n    for(let x = 0; x < 209; x++){\r\n        if((x > 1 && x < 18) || (x>20 && x < 31) || (x>38 && x < 49) || (x > 154 && x < 176) || (x > 193 && x < 197) ){\r\n            chemArray[x-1] = []; \r\n        }else if(atomicNum > 56 && atomicNum < 72){\r\n            if(atomicNum == 57){\r\n                chemArray[x-1] = []; \r\n            }\r\n            chemArray[actL1] = ChemData.numbers[atomicNum];\r\n            actL1++;\r\n            atomicNum++\r\n        }\r\n        else if(atomicNum > 88 && atomicNum < 104){\r\n            if(atomicNum == 89){\r\n                chemArray[x-1] = []; \r\n            }\r\n            chemArray[actL2] = ChemData.numbers[atomicNum];\r\n            actL2++;\r\n            atomicNum++\r\n        }\r\n        else if(atomicNum < 119){\r\n            chemArray[x-1] = ChemData.numbers[atomicNum]; \r\n            atomicNum++;\r\n        }\r\n    }\r\n}\r\n\r\nfunction addTile(data)\r\n{   \r\n    let x;\r\n    if(data.atomicNumber == 1){\r\n        x = \"red\"\r\n    }\r\n    else{\r\n        x = \"green\"\r\n    }\r\n    if (data.name == undefined){\r\n        return <HiddenTile/>\r\n    } else{\r\n        return <Tile \r\n        symbol = {data.symbol}\r\n        number = {data.atomicNumber}\r\n        name = {data.name}\r\n        test = {x}\r\n        />\r\n    } \r\n}\r\n\r\n\r\n\r\n\r\nexport default TableHolder;","import React, {useContext} from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport {atomicContext} from '../Contexts/atomicContexts'\r\n\r\n\r\nconst ChemData = require('periodic-table');\r\nconsole.log(ChemData)\r\n\r\nfunction DataBox(){\r\n    const { getEle } = useContext(atomicContext);\r\n    \r\n    return <div className=\"dataBox\">\r\n        <h1>\r\n            Element: {ChemData.numbers[getEle].name}\r\n            \r\n        </h1>\r\n        \r\n        <h2>\r\n           <ol>\r\n               <li>Symbol: {ChemData.numbers[getEle].symbol}</li>\r\n               <li>Atomic number: {ChemData.numbers[getEle].atomicNumber}</li>\r\n               <li>Atomic mass: {ChemData.numbers[getEle].atomicMass}</li>\r\n               <li>Bonding type: {ChemData.numbers[getEle].bondingType}</li>\r\n               <li>Boiling point: {ChemData.numbers[getEle].boilingPoint}</li>\r\n               <li>Melting point: {ChemData.numbers[getEle].meltingPoint}</li>\r\n               <li>Group block: {ChemData.numbers[getEle].groupBlock}</li>\r\n               <li>Year discovered: {ChemData.numbers[getEle].yearDiscovered}</li>\r\n               \r\n           </ol>\r\n           <span></span>\r\n        </h2>\r\n    </div>\r\n}\r\n\r\nexport default DataBox;","import React, {useState} from 'react';\nimport Header from './header'\nimport TableHolder from './TableHolder';\nimport DataBox from './dataBox';\nimport {atomicContext} from '../Contexts/atomicContexts'\n\n \nfunction App(){\n  const [getEle, setEle] = useState(1);\n  \n  return <div>\n    \n      <Header/>\n    <atomicContext.Provider value = {{getEle,setEle}}>\n      <DataBox/>\n      <TableHolder/>\n    </atomicContext.Provider>\n  </div>\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}